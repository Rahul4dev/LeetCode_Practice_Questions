//  181. Employees Earning MOre than their Managers:

SQL schema:
Create table If Not Exists Employee (id int, name varchar(255), salary int, managerId int)
Truncate table Employee
insert into Employee (id, name, salary, managerId) values ('1', 'Joe', '70000', '3')
insert into Employee (id, name, salary, managerId) values ('2', 'Henry', '80000', '4')
insert into Employee (id, name, salary, managerId) values ('3', 'Sam', '60000', 'None')
insert into Employee (id, name, salary, managerId) values ('4', 'Max', '90000', 'None')

id is the primary key column for this table.
Each row of this table indicates the ID of an employee, their name, salary, and the ID of their manager.

Solution:   or Query
select a.name as Employee
from employee a, employee b
WHERE
    a.ManagerId = b.Id
        AND a.Salary > b.Salary;

Ans:
 Joe
 
 ------------------------------------------------------------------------------------------------------------------------------
 
// 175.  Combining Two tables:

SQL Schema:
Create table If Not Exists Person (personId int, firstName varchar(255), lastName varchar(255))
Create table If Not Exists Address (addressId int, personId int, city varchar(255), state varchar(255))
Truncate table Person
insert into Person (personId, lastName, firstName) values ('1', 'Wang', 'Allen')
insert into Person (personId, lastName, firstName) values ('2', 'Alice', 'Bob')
Truncate table Address
insert into Address (addressId, personId, city, state) values ('1', '2', 'New York City', 'New York')
insert into Address (addressId, personId, city, state) values ('2', '3', 'Leetcode', 'California')

Question:
 Write an SQL query to report the first name, last name, city, and state of each person in the Person table.
 If the address of a personId is not present in the Address table, report null instead.
 
 Solution:   or Query
 
 select firstName, lastName, city, state 
from person
left join address on person.personId = address.personId;

Ans:

| firstName | lastName | city          | state    |
| --------- | -------- | ------------- | -------- |
| Allen     | Wang     |               |          |
| Bob       | Alice    | New York City | New York |

-------------------------------------------------------------------------------------------------------------------------------------------------

1757. Recyclable and Low Fat Products

SQL Schema:
Create table If Not Exists Products (product_id int, low_fats ENUM('Y', 'N'), recyclable ENUM('Y','N'))
Truncate table Products
insert into Products (product_id, low_fats, recyclable) values ('0', 'Y', 'N')
insert into Products (product_id, low_fats, recyclable) values ('1', 'Y', 'Y')
insert into Products (product_id, low_fats, recyclable) values ('2', 'N', 'Y')
insert into Products (product_id, low_fats, recyclable) values ('3', 'Y', 'Y')
insert into Products (product_id, low_fats, recyclable) values ('4', 'N', 'N')

Solution: or Query

select Products.product_id from Products where low_fats = 'Y' and  recyclable = 'Y';

Ans:
Input
Products =
| product_id | low_fats | recyclable |
| ---------- | -------- | ---------- |
| 0          | Y        | N          |
| 1          | Y        | Y          |
| 2          | N        | Y          |
| 3          | Y        | Y          |
| 4          | N        | N          |
Output
| product_id |
| ---------- |
| 1          |
| 3          |
